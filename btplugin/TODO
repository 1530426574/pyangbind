## TODO: Rules can be implemented by having all _set* methods call a generic
## _obj_validate - this can be defined on a per-container basis, or just at the
## base of the module. When defined at the base of the module, then we need to
## call parent validate() methods for all sub-objects.

##	YANG types implementation:
##		TYPE 					IMPLEMENTATION STATUS								UNIT TESTS
##		binary					no													-
##			* length			no
##		bits					no													-
##			* position			no
##		boolean 				implemented (YANGBool, cannot subclass bool)		tests/boolean-empty
##		empty					implemented as boolean								tests/boolean-empty
##		decimal64				implemented as decimal								no
##			* fraction-digits	no
##		enumeration				implemented											tests/enumeration (complete)
##		identityref				no													-
##		int{8,16,32,64}			implemented (numpy int{8,16,32,64})					tests/int (complete)													-
##		uint{8,16,32,64}		implemented (numpy uint{8,16,32,64})				tests/uint (complete)
##			* range substmt		yes
##		leafref					no													-
##		string 					implemented as string 								tests/string (complete)
##			* pattern substmt	yes
##			* length substmt	no
##		union					no													-
##		typedef					yes													tests/typedef (complete)
##
##		container 				yes													tests/*
##		list					yes													tests/list (complete)
##		leaf-list				yes													tests/leaf-list (complete)

##	Generic tests needed
##		* unsafe python names


## description statements should be included as a __doc__ strings within the
## derived classes